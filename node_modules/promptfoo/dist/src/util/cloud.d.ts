import type { Plugin, Severity } from '../redteam/constants';
import type { UnifiedConfig } from '../types';
import type { ProviderOptions } from '../types/providers';
export declare function makeRequest(path: string, method: string, body?: any): Promise<Response>;
export declare function getProviderFromCloud(id: string): Promise<ProviderOptions & {
    id: string;
}>;
export declare function getConfigFromCloud(id: string, providerId?: string): Promise<UnifiedConfig>;
export declare function isCloudProvider(providerPath: string): boolean;
export declare function getCloudDatabaseId(providerPath: string): string;
/**
 * Get the plugin severity overrides for a cloud provider.
 * @param cloudProviderId - The cloud provider ID.
 * @returns The plugin severity overrides.
 */
export declare function getPluginSeverityOverridesFromCloud(cloudProviderId: string): Promise<{
    id: string;
    severities: Record<Plugin, Severity>;
} | null>;
//# sourceMappingURL=cloud.d.ts.map