"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ALL_STRATEGIES = exports.STRATEGY_COLLECTION_MAPPINGS = exports.STRATEGY_COLLECTIONS = exports.ADDITIONAL_STRATEGIES = exports.DATASET_PLUGINS = exports.AGENTIC_STRATEGIES = exports.MULTI_TURN_STRATEGIES = exports.DEFAULT_STRATEGIES = exports.FRAMEWORK_COMPLIANCE_IDS = void 0;
// These are exposed on the frontend under the framework compliance section
exports.FRAMEWORK_COMPLIANCE_IDS = [
    'mitre:atlas',
    'nist:ai:measure',
    'owasp:api',
    'owasp:llm',
    'eu:ai-act',
];
exports.DEFAULT_STRATEGIES = ['basic', 'jailbreak', 'jailbreak:composite'];
exports.MULTI_TURN_STRATEGIES = ['crescendo', 'goat'];
exports.AGENTIC_STRATEGIES = [
    'crescendo',
    'goat',
    'jailbreak',
    'jailbreak:tree',
    'pandamonium',
];
exports.DATASET_PLUGINS = [
    'beavertails',
    'cyberseceval',
    'donotanswer',
    'harmbench',
    'toxic-chat',
    'aegis',
    'pliny',
    'unsafebench',
    'xstest',
];
exports.ADDITIONAL_STRATEGIES = [
    'audio',
    'base64',
    'best-of-n',
    'camelcase',
    'citation',
    'crescendo',
    'gcg',
    'goat',
    'hex',
    'homoglyph',
    'image',
    'emoji',
    'jailbreak:likert',
    'jailbreak:tree',
    'leetspeak',
    'math-prompt',
    'morse',
    'multilingual',
    'pandamonium',
    'piglatin',
    'prompt-injection',
    'retry',
    'rot13',
    'video',
];
exports.STRATEGY_COLLECTIONS = ['other-encodings'];
exports.STRATEGY_COLLECTION_MAPPINGS = {
    'other-encodings': ['camelcase', 'morse', 'piglatin', 'emoji'],
};
const _ALL_STRATEGIES = [
    'default',
    ...exports.DEFAULT_STRATEGIES,
    ...exports.ADDITIONAL_STRATEGIES,
    ...exports.STRATEGY_COLLECTIONS,
];
exports.ALL_STRATEGIES = Array.from(new Set(_ALL_STRATEGIES)).sort();
//# sourceMappingURL=strategies.js.map