"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; } var _class; var _class2;








var _chunkUJJSTYW5cjs = require('../chunk-UJJSTYW5.cjs');

// node_modules/lodash/_listCacheClear.js
var require_listCacheClear = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_listCacheClear.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    module.exports = listCacheClear;
  }
});

// node_modules/lodash/eq.js
var require_eq = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/eq.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module.exports = eq;
  }
});

// node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_assocIndexOf.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var eq = require_eq();
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    module.exports = assocIndexOf;
  }
});

// node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_listCacheDelete.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var assocIndexOf = require_assocIndexOf();
    var arrayProto = Array.prototype;
    var splice = arrayProto.splice;
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    module.exports = listCacheDelete;
  }
});

// node_modules/lodash/_listCacheGet.js
var require_listCacheGet = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_listCacheGet.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var assocIndexOf = require_assocIndexOf();
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    module.exports = listCacheGet;
  }
});

// node_modules/lodash/_listCacheHas.js
var require_listCacheHas = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_listCacheHas.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var assocIndexOf = require_assocIndexOf();
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    module.exports = listCacheHas;
  }
});

// node_modules/lodash/_listCacheSet.js
var require_listCacheSet = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_listCacheSet.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var assocIndexOf = require_assocIndexOf();
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    module.exports = listCacheSet;
  }
});

// node_modules/lodash/_ListCache.js
var require_ListCache = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_ListCache.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var listCacheClear = require_listCacheClear();
    var listCacheDelete = require_listCacheDelete();
    var listCacheGet = require_listCacheGet();
    var listCacheHas = require_listCacheHas();
    var listCacheSet = require_listCacheSet();
    function ListCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    module.exports = ListCache;
  }
});

// node_modules/lodash/_stackClear.js
var require_stackClear = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_stackClear.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var ListCache = require_ListCache();
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    module.exports = stackClear;
  }
});

// node_modules/lodash/_stackDelete.js
var require_stackDelete = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_stackDelete.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    module.exports = stackDelete;
  }
});

// node_modules/lodash/_stackGet.js
var require_stackGet = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_stackGet.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function stackGet(key) {
      return this.__data__.get(key);
    }
    module.exports = stackGet;
  }
});

// node_modules/lodash/_stackHas.js
var require_stackHas = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_stackHas.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function stackHas(key) {
      return this.__data__.has(key);
    }
    module.exports = stackHas;
  }
});

// node_modules/lodash/_freeGlobal.js
var require_freeGlobal = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_freeGlobal.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module.exports = freeGlobal;
  }
});

// node_modules/lodash/_root.js
var require_root = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_root.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module.exports = root;
  }
});

// node_modules/lodash/_Symbol.js
var require_Symbol = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_Symbol.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var root = require_root();
    var Symbol = root.Symbol;
    module.exports = Symbol;
  }
});

// node_modules/lodash/_getRawTag.js
var require_getRawTag = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_getRawTag.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var Symbol = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol ? Symbol.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module.exports = getRawTag;
  }
});

// node_modules/lodash/_objectToString.js
var require_objectToString = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_objectToString.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module.exports = objectToString;
  }
});

// node_modules/lodash/_baseGetTag.js
var require_baseGetTag = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseGetTag.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var Symbol = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol ? Symbol.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module.exports = baseGetTag;
  }
});

// node_modules/lodash/isObject.js
var require_isObject = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/isObject.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module.exports = isObject;
  }
});

// node_modules/lodash/isFunction.js
var require_isFunction = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/isFunction.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseGetTag = require_baseGetTag();
    var isObject = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    module.exports = isFunction;
  }
});

// node_modules/lodash/_coreJsData.js
var require_coreJsData = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_coreJsData.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var root = require_root();
    var coreJsData = root["__core-js_shared__"];
    module.exports = coreJsData;
  }
});

// node_modules/lodash/_isMasked.js
var require_isMasked = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_isMasked.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    module.exports = isMasked;
  }
});

// node_modules/lodash/_toSource.js
var require_toSource = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_toSource.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    module.exports = toSource;
  }
});

// node_modules/lodash/_baseIsNative.js
var require_baseIsNative = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseIsNative.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var isFunction = require_isFunction();
    var isMasked = require_isMasked();
    var isObject = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module.exports = baseIsNative;
  }
});

// node_modules/lodash/_getValue.js
var require_getValue = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_getValue.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    module.exports = getValue;
  }
});

// node_modules/lodash/_getNative.js
var require_getNative = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_getNative.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseIsNative = require_baseIsNative();
    var getValue = require_getValue();
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    module.exports = getNative;
  }
});

// node_modules/lodash/_Map.js
var require_Map = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_Map.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var getNative = require_getNative();
    var root = require_root();
    var Map = getNative(root, "Map");
    module.exports = Map;
  }
});

// node_modules/lodash/_nativeCreate.js
var require_nativeCreate = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_nativeCreate.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var getNative = require_getNative();
    var nativeCreate = getNative(Object, "create");
    module.exports = nativeCreate;
  }
});

// node_modules/lodash/_hashClear.js
var require_hashClear = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_hashClear.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var nativeCreate = require_nativeCreate();
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    module.exports = hashClear;
  }
});

// node_modules/lodash/_hashDelete.js
var require_hashDelete = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_hashDelete.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = hashDelete;
  }
});

// node_modules/lodash/_hashGet.js
var require_hashGet = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_hashGet.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    module.exports = hashGet;
  }
});

// node_modules/lodash/_hashHas.js
var require_hashHas = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_hashHas.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var nativeCreate = require_nativeCreate();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    module.exports = hashHas;
  }
});

// node_modules/lodash/_hashSet.js
var require_hashSet = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_hashSet.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    module.exports = hashSet;
  }
});

// node_modules/lodash/_Hash.js
var require_Hash = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_Hash.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var hashClear = require_hashClear();
    var hashDelete = require_hashDelete();
    var hashGet = require_hashGet();
    var hashHas = require_hashHas();
    var hashSet = require_hashSet();
    function Hash(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    module.exports = Hash;
  }
});

// node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_mapCacheClear.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var Hash = require_Hash();
    var ListCache = require_ListCache();
    var Map = require_Map();
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map || ListCache)(),
        "string": new Hash()
      };
    }
    module.exports = mapCacheClear;
  }
});

// node_modules/lodash/_isKeyable.js
var require_isKeyable = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_isKeyable.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    module.exports = isKeyable;
  }
});

// node_modules/lodash/_getMapData.js
var require_getMapData = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_getMapData.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var isKeyable = require_isKeyable();
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    module.exports = getMapData;
  }
});

// node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_mapCacheDelete.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var getMapData = require_getMapData();
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = mapCacheDelete;
  }
});

// node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_mapCacheGet.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var getMapData = require_getMapData();
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    module.exports = mapCacheGet;
  }
});

// node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_mapCacheHas.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var getMapData = require_getMapData();
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    module.exports = mapCacheHas;
  }
});

// node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_mapCacheSet.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var getMapData = require_getMapData();
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    module.exports = mapCacheSet;
  }
});

// node_modules/lodash/_MapCache.js
var require_MapCache = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_MapCache.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var mapCacheClear = require_mapCacheClear();
    var mapCacheDelete = require_mapCacheDelete();
    var mapCacheGet = require_mapCacheGet();
    var mapCacheHas = require_mapCacheHas();
    var mapCacheSet = require_mapCacheSet();
    function MapCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    module.exports = MapCache;
  }
});

// node_modules/lodash/_stackSet.js
var require_stackSet = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_stackSet.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var ListCache = require_ListCache();
    var Map = require_Map();
    var MapCache = require_MapCache();
    var LARGE_ARRAY_SIZE = 200;
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    module.exports = stackSet;
  }
});

// node_modules/lodash/_Stack.js
var require_Stack = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_Stack.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var ListCache = require_ListCache();
    var stackClear = require_stackClear();
    var stackDelete = require_stackDelete();
    var stackGet = require_stackGet();
    var stackHas = require_stackHas();
    var stackSet = require_stackSet();
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    module.exports = Stack;
  }
});

// node_modules/lodash/_defineProperty.js
var require_defineProperty = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_defineProperty.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var getNative = require_getNative();
    var defineProperty = function() {
      try {
        var func = getNative(Object, "defineProperty");
        func({}, "", {});
        return func;
      } catch (e) {
      }
    }();
    module.exports = defineProperty;
  }
});

// node_modules/lodash/_baseAssignValue.js
var require_baseAssignValue = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseAssignValue.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var defineProperty = require_defineProperty();
    function baseAssignValue(object, key, value) {
      if (key == "__proto__" && defineProperty) {
        defineProperty(object, key, {
          "configurable": true,
          "enumerable": true,
          "value": value,
          "writable": true
        });
      } else {
        object[key] = value;
      }
    }
    module.exports = baseAssignValue;
  }
});

// node_modules/lodash/_assignMergeValue.js
var require_assignMergeValue = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_assignMergeValue.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseAssignValue = require_baseAssignValue();
    var eq = require_eq();
    function assignMergeValue(object, key, value) {
      if (value !== void 0 && !eq(object[key], value) || value === void 0 && !(key in object)) {
        baseAssignValue(object, key, value);
      }
    }
    module.exports = assignMergeValue;
  }
});

// node_modules/lodash/_createBaseFor.js
var require_createBaseFor = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_createBaseFor.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }
    module.exports = createBaseFor;
  }
});

// node_modules/lodash/_baseFor.js
var require_baseFor = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseFor.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var createBaseFor = require_createBaseFor();
    var baseFor = createBaseFor();
    module.exports = baseFor;
  }
});

// node_modules/lodash/_cloneBuffer.js
var require_cloneBuffer = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_cloneBuffer.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var root = require_root();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer = moduleExports ? root.Buffer : void 0;
    var allocUnsafe = Buffer ? Buffer.allocUnsafe : void 0;
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
      buffer.copy(result);
      return result;
    }
    module.exports = cloneBuffer;
  }
});

// node_modules/lodash/_Uint8Array.js
var require_Uint8Array = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_Uint8Array.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var root = require_root();
    var Uint8Array = root.Uint8Array;
    module.exports = Uint8Array;
  }
});

// node_modules/lodash/_cloneArrayBuffer.js
var require_cloneArrayBuffer = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_cloneArrayBuffer.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var Uint8Array = require_Uint8Array();
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }
    module.exports = cloneArrayBuffer;
  }
});

// node_modules/lodash/_cloneTypedArray.js
var require_cloneTypedArray = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_cloneTypedArray.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var cloneArrayBuffer = require_cloneArrayBuffer();
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }
    module.exports = cloneTypedArray;
  }
});

// node_modules/lodash/_copyArray.js
var require_copyArray = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_copyArray.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function copyArray(source, array) {
      var index = -1, length = source.length;
      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }
    module.exports = copyArray;
  }
});

// node_modules/lodash/_baseCreate.js
var require_baseCreate = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseCreate.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var isObject = require_isObject();
    var objectCreate = Object.create;
    var baseCreate = /* @__PURE__ */ function() {
      function object() {
      }
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object();
        object.prototype = void 0;
        return result;
      };
    }();
    module.exports = baseCreate;
  }
});

// node_modules/lodash/_overArg.js
var require_overArg = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_overArg.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    module.exports = overArg;
  }
});

// node_modules/lodash/_getPrototype.js
var require_getPrototype = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_getPrototype.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var overArg = require_overArg();
    var getPrototype = overArg(Object.getPrototypeOf, Object);
    module.exports = getPrototype;
  }
});

// node_modules/lodash/_isPrototype.js
var require_isPrototype = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_isPrototype.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var objectProto = Object.prototype;
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    module.exports = isPrototype;
  }
});

// node_modules/lodash/_initCloneObject.js
var require_initCloneObject = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_initCloneObject.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseCreate = require_baseCreate();
    var getPrototype = require_getPrototype();
    var isPrototype = require_isPrototype();
    function initCloneObject(object) {
      return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
    }
    module.exports = initCloneObject;
  }
});

// node_modules/lodash/isObjectLike.js
var require_isObjectLike = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/isObjectLike.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    module.exports = isObjectLike;
  }
});

// node_modules/lodash/_baseIsArguments.js
var require_baseIsArguments = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseIsArguments.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    module.exports = baseIsArguments;
  }
});

// node_modules/lodash/isArguments.js
var require_isArguments = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/isArguments.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseIsArguments = require_baseIsArguments();
    var isObjectLike = require_isObjectLike();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var isArguments = baseIsArguments(/* @__PURE__ */ function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    module.exports = isArguments;
  }
});

// node_modules/lodash/isArray.js
var require_isArray = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/isArray.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var isArray = Array.isArray;
    module.exports = isArray;
  }
});

// node_modules/lodash/isLength.js
var require_isLength = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/isLength.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var MAX_SAFE_INTEGER = 9007199254740991;
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    module.exports = isLength;
  }
});

// node_modules/lodash/isArrayLike.js
var require_isArrayLike = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/isArrayLike.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var isFunction = require_isFunction();
    var isLength = require_isLength();
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    module.exports = isArrayLike;
  }
});

// node_modules/lodash/isArrayLikeObject.js
var require_isArrayLikeObject = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/isArrayLikeObject.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var isArrayLike = require_isArrayLike();
    var isObjectLike = require_isObjectLike();
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    module.exports = isArrayLikeObject;
  }
});

// node_modules/lodash/stubFalse.js
var require_stubFalse = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/stubFalse.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function stubFalse() {
      return false;
    }
    module.exports = stubFalse;
  }
});

// node_modules/lodash/isBuffer.js
var require_isBuffer = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/isBuffer.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var root = require_root();
    var stubFalse = require_stubFalse();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer = moduleExports ? root.Buffer : void 0;
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
    var isBuffer = nativeIsBuffer || stubFalse;
    module.exports = isBuffer;
  }
});

// node_modules/lodash/isPlainObject.js
var require_isPlainObject = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/isPlainObject.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseGetTag = require_baseGetTag();
    var getPrototype = require_getPrototype();
    var isObjectLike = require_isObjectLike();
    var objectTag = "[object Object]";
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectCtorString = funcToString.call(Object);
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
      return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    module.exports = isPlainObject;
  }
});

// node_modules/lodash/_baseIsTypedArray.js
var require_baseIsTypedArray = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseIsTypedArray.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseGetTag = require_baseGetTag();
    var isLength = require_isLength();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    module.exports = baseIsTypedArray;
  }
});

// node_modules/lodash/_baseUnary.js
var require_baseUnary = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseUnary.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    module.exports = baseUnary;
  }
});

// node_modules/lodash/_nodeUtil.js
var require_nodeUtil = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_nodeUtil.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var freeGlobal = require_freeGlobal();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        var types = freeModule && freeModule.require && freeModule.require("util").types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    module.exports = nodeUtil;
  }
});

// node_modules/lodash/isTypedArray.js
var require_isTypedArray = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/isTypedArray.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseIsTypedArray = require_baseIsTypedArray();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    module.exports = isTypedArray;
  }
});

// node_modules/lodash/_safeGet.js
var require_safeGet = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_safeGet.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function safeGet(object, key) {
      if (key === "constructor" && typeof object[key] === "function") {
        return;
      }
      if (key == "__proto__") {
        return;
      }
      return object[key];
    }
    module.exports = safeGet;
  }
});

// node_modules/lodash/_assignValue.js
var require_assignValue = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_assignValue.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseAssignValue = require_baseAssignValue();
    var eq = require_eq();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === void 0 && !(key in object)) {
        baseAssignValue(object, key, value);
      }
    }
    module.exports = assignValue;
  }
});

// node_modules/lodash/_copyObject.js
var require_copyObject = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_copyObject.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var assignValue = require_assignValue();
    var baseAssignValue = require_baseAssignValue();
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});
      var index = -1, length = props.length;
      while (++index < length) {
        var key = props[index];
        var newValue = customizer ? customizer(object[key], source[key], key, object, source) : void 0;
        if (newValue === void 0) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }
    module.exports = copyObject;
  }
});

// node_modules/lodash/_baseTimes.js
var require_baseTimes = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseTimes.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function baseTimes(n, iteratee) {
      var index = -1, result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    module.exports = baseTimes;
  }
});

// node_modules/lodash/_isIndex.js
var require_isIndex = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_isIndex.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var MAX_SAFE_INTEGER = 9007199254740991;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    module.exports = isIndex;
  }
});

// node_modules/lodash/_arrayLikeKeys.js
var require_arrayLikeKeys = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_arrayLikeKeys.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseTimes = require_baseTimes();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isIndex = require_isIndex();
    var isTypedArray = require_isTypedArray();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
        isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = arrayLikeKeys;
  }
});

// node_modules/lodash/_nativeKeysIn.js
var require_nativeKeysIn = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_nativeKeysIn.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = nativeKeysIn;
  }
});

// node_modules/lodash/_baseKeysIn.js
var require_baseKeysIn = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseKeysIn.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var isObject = require_isObject();
    var isPrototype = require_isPrototype();
    var nativeKeysIn = require_nativeKeysIn();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object), result = [];
      for (var key in object) {
        if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeysIn;
  }
});

// node_modules/lodash/keysIn.js
var require_keysIn = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/keysIn.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeysIn = require_baseKeysIn();
    var isArrayLike = require_isArrayLike();
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }
    module.exports = keysIn;
  }
});

// node_modules/lodash/toPlainObject.js
var require_toPlainObject = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/toPlainObject.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var copyObject = require_copyObject();
    var keysIn = require_keysIn();
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }
    module.exports = toPlainObject;
  }
});

// node_modules/lodash/_baseMergeDeep.js
var require_baseMergeDeep = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseMergeDeep.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var assignMergeValue = require_assignMergeValue();
    var cloneBuffer = require_cloneBuffer();
    var cloneTypedArray = require_cloneTypedArray();
    var copyArray = require_copyArray();
    var initCloneObject = require_initCloneObject();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isArrayLikeObject = require_isArrayLikeObject();
    var isBuffer = require_isBuffer();
    var isFunction = require_isFunction();
    var isObject = require_isObject();
    var isPlainObject = require_isPlainObject();
    var isTypedArray = require_isTypedArray();
    var safeGet = require_safeGet();
    var toPlainObject = require_toPlainObject();
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : void 0;
      var isCommon = newValue === void 0;
      if (isCommon) {
        var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          } else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          } else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          } else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          } else {
            newValue = [];
          }
        } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          } else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        } else {
          isCommon = false;
        }
      }
      if (isCommon) {
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack["delete"](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }
    module.exports = baseMergeDeep;
  }
});

// node_modules/lodash/_baseMerge.js
var require_baseMerge = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseMerge.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var Stack = require_Stack();
    var assignMergeValue = require_assignMergeValue();
    var baseFor = require_baseFor();
    var baseMergeDeep = require_baseMergeDeep();
    var isObject = require_isObject();
    var keysIn = require_keysIn();
    var safeGet = require_safeGet();
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack());
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        } else {
          var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : void 0;
          if (newValue === void 0) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }
    module.exports = baseMerge;
  }
});

// node_modules/lodash/identity.js
var require_identity = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/identity.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function identity(value) {
      return value;
    }
    module.exports = identity;
  }
});

// node_modules/lodash/_apply.js
var require_apply = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_apply.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }
    module.exports = apply;
  }
});

// node_modules/lodash/_overRest.js
var require_overRest = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_overRest.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var apply = require_apply();
    var nativeMax = Math.max;
    function overRest(func, start, transform) {
      start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
      return function() {
        var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }
    module.exports = overRest;
  }
});

// node_modules/lodash/constant.js
var require_constant = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/constant.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    function constant(value) {
      return function() {
        return value;
      };
    }
    module.exports = constant;
  }
});

// node_modules/lodash/_baseSetToString.js
var require_baseSetToString = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseSetToString.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var constant = require_constant();
    var defineProperty = require_defineProperty();
    var identity = require_identity();
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, "toString", {
        "configurable": true,
        "enumerable": false,
        "value": constant(string),
        "writable": true
      });
    };
    module.exports = baseSetToString;
  }
});

// node_modules/lodash/_shortOut.js
var require_shortOut = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_shortOut.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var HOT_COUNT = 800;
    var HOT_SPAN = 16;
    var nativeNow = Date.now;
    function shortOut(func) {
      var count = 0, lastCalled = 0;
      return function() {
        var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(void 0, arguments);
      };
    }
    module.exports = shortOut;
  }
});

// node_modules/lodash/_setToString.js
var require_setToString = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_setToString.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseSetToString = require_baseSetToString();
    var shortOut = require_shortOut();
    var setToString = shortOut(baseSetToString);
    module.exports = setToString;
  }
});

// node_modules/lodash/_baseRest.js
var require_baseRest = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_baseRest.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var identity = require_identity();
    var overRest = require_overRest();
    var setToString = require_setToString();
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + "");
    }
    module.exports = baseRest;
  }
});

// node_modules/lodash/_isIterateeCall.js
var require_isIterateeCall = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_isIterateeCall.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var eq = require_eq();
    var isArrayLike = require_isArrayLike();
    var isIndex = require_isIndex();
    var isObject = require_isObject();
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
        return eq(object[index], value);
      }
      return false;
    }
    module.exports = isIterateeCall;
  }
});

// node_modules/lodash/_createAssigner.js
var require_createAssigner = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/_createAssigner.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseRest = require_baseRest();
    var isIterateeCall = require_isIterateeCall();
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
        customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? void 0 : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }
    module.exports = createAssigner;
  }
});

// node_modules/lodash/merge.js
var require_merge = _chunkUJJSTYW5cjs.__commonJS.call(void 0, {
  "node_modules/lodash/merge.js"(exports, module) {
    "use strict";
    _chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
    var baseMerge = require_baseMerge();
    var createAssigner = require_createAssigner();
    var merge3 = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });
    module.exports = merge3;
  }
});

// src/langchain/index.ts
_chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );

// src/langchain/llm.ts
_chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
var import_merge = _chunkUJJSTYW5cjs.__toESM.call(void 0, require_merge(), 1);


var _llms = require('@langchain/core/language_models/llms');
var _outputs = require('@langchain/core/outputs');
var _load = require('@langchain/core/load');
var GenAIModel = (_class = class _GenAIModel extends _llms.BaseLLM {
  
  
  
  
  
  constructor({
    model_id,
    prompt_id,
    parameters,
    moderations,
    client,
    configuration,
    ...options
  }) {
    super(options);_class.prototype.__init.call(this);_class.prototype.__init2.call(this);_class.prototype.__init3.call(this);;
    this.modelId = model_id;
    this.promptId = prompt_id;
    this.parameters = parameters;
    this.moderations = moderations;
    this.client = _nullishCoalesce(client, () => ( new (0, _chunkUJJSTYW5cjs.Client)(configuration)));
  }
  async _generate(inputs, options, runManager) {
    const outputs = await Promise.all(
      inputs.map(
        (input) => this.client.text.generation.create(
          this._prepareRequest(input, options),
          {
            signal: options.signal
          }
        )
      )
    );
    const generations = outputs.map(
      (output) => output.results.map((result) => {
        const { generated_text, ...generationInfo } = result;
        return { text: generated_text, generationInfo };
      })
    );
    const llmOutput = generations.flat().reduce(
      (acc, generation) => {
        acc.generated_token_count += generation.generationInfo.generated_token_count;
        acc.input_token_count += _nullishCoalesce(generation.generationInfo.input_token_count, () => ( 0));
        return acc;
      },
      {
        generated_token_count: 0,
        input_token_count: 0
      }
    );
    return {
      generations,
      llmOutput
    };
  }
  async *_streamResponseChunks(input, options, runManager) {
    const stream = await this.client.text.generation.create_stream(
      this._prepareRequest(input, options),
      {
        signal: options.signal
      }
    );
    for await (const response of stream) {
      if (response.results) {
        for (const { generated_text, ...generationInfo } of response.results) {
          yield new (0, _outputs.GenerationChunk)({
            text: generated_text,
            generationInfo
          });
          void _optionalChain([runManager, 'optionalAccess', _ => _.handleText, 'call', _2 => _2(generated_text)]);
        }
      }
      if (response.moderations) {
        yield new (0, _outputs.GenerationChunk)({
          text: "",
          generationInfo: {
            moderations: response.moderations
          }
        });
        void _optionalChain([runManager, 'optionalAccess', _3 => _3.handleText, 'call', _4 => _4("")]);
      }
    }
  }
  _prepareRequest(input, options) {
    const stop_sequences = _chunkUJJSTYW5cjs.concatUnique.call(void 0, 
      options.stop,
      _optionalChain([options, 'access', _5 => _5.parameters, 'optionalAccess', _6 => _6.stop_sequences])
    );
    const { model_id, prompt_id, ...rest } = (0, import_merge.default)(
      {
        model_id: this.modelId,
        prompt_id: this.promptId,
        moderations: this.moderations,
        parameters: this.parameters
      },
      {
        model_id: options.model_id,
        prompt_id: options.prompt_id,
        moderations: options.moderations,
        parameters: {
          ...options.parameters,
          stop_sequences
        }
      },
      { input }
    );
    console.info(rest);
    return {
      ...prompt_id ? { prompt_id } : { model_id },
      ...rest
    };
  }
  async getNumTokens(input) {
    const result = await this.client.text.tokenization.create({
      ...!_chunkUJJSTYW5cjs.isNullish.call(void 0, this.modelId) && {
        model_id: this.modelId
      },
      input,
      parameters: {
        return_options: {
          tokens: false
        }
      }
    });
    return _nullishCoalesce(_optionalChain([result, 'access', _7 => _7.results, 'access', _8 => _8.at, 'call', _9 => _9(0), 'optionalAccess', _10 => _10.token_count]), () => ( 0));
  }
  static async fromJSON(value, client) {
    const input = typeof value === "string" ? value : JSON.stringify(value);
    return await _load.load.call(void 0, input, {
      optionalImportsMap: {
        "@ibm-generative-ai/node-sdk/langchain/llm": {
          GenAIModel: _GenAIModel
        }
      },
      secretsMap: {
        client
      }
    });
  }
  _modelType() {
    return this.modelId;
  }
  _llmType() {
    return "GenAIModel";
  }
  __init() {this.lc_serializable = true}
  __init2() {this.lc_namespace = ["@ibm-generative-ai/node-sdk", "langchain", "llm"]}
  get lc_id() {
    return [...this.lc_namespace, "GenAIModel"];
  }
  __init3() {this.lc_kwargs = {
    modelId: void 0,
    promptId: void 0,
    parameters: void 0,
    moderations: void 0,
    client: void 0
  }}
  get lc_secrets() {
    return { ...super.lc_secrets, client: "client" };
  }
}, _class);

// src/langchain/llm-chat.ts
_chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
var import_merge2 = _chunkUJJSTYW5cjs.__toESM.call(void 0, require_merge(), 1);


var _chat_models = require('@langchain/core/language_models/chat_models');



var _messages = require('@langchain/core/messages');


var GenAIChatModel = (_class2 = class _GenAIChatModel extends _chat_models.BaseChatModel {
  
  
  
  
  
  
  
  
  
  constructor({
    model_id,
    prompt_id,
    conversation_id,
    parameters,
    moderations,
    parent_id,
    use_conversation_parameters,
    trim_method,
    client,
    configuration,
    ...options
  }) {
    super(options);_class2.prototype.__init4.call(this);_class2.prototype.__init5.call(this);_class2.prototype.__init6.call(this);;
    this.modelId = model_id;
    this.promptId = prompt_id;
    this.conversationId = conversation_id;
    this.parameters = parameters;
    this.moderations = moderations;
    this.parentId = parent_id;
    this.useConversationParameters = use_conversation_parameters;
    this.trimMethod = trim_method;
    this.client = _nullishCoalesce(client, () => ( new (0, _chunkUJJSTYW5cjs.Client)(configuration)));
  }
  async _generate(messages, options, _runManager) {
    const output = await this.client.text.chat.create(
      this._prepareRequest(messages, options),
      { signal: options.signal }
    );
    if (output.results.length !== 1)
      throw new (0, _chunkUJJSTYW5cjs.InternalError)("Invalid result");
    const result = output.results[0];
    if (result.input_token_count == null)
      throw new (0, _chunkUJJSTYW5cjs.InternalError)("Missing token count");
    return {
      generations: [
        {
          message: new (0, _messages.AIMessage)({ content: result.generated_text }),
          text: result.generated_text,
          generationInfo: {
            conversationId: output.conversation_id,
            inputTokens: result.input_tokens,
            generatedTokens: result.generated_tokens,
            seed: result.seed,
            stopReason: result.stop_reason,
            stopSequence: result.stop_sequence,
            moderation: result.moderation
          }
        }
      ],
      llmOutput: {
        tokenUsage: {
          completionTokens: result.generated_token_count,
          promptTokens: result.input_token_count,
          totalTokens: result.generated_token_count + result.input_token_count
        }
      }
    };
  }
  async *_streamResponseChunks(messages, options, _runManager) {
    const outputStream = await this.client.text.chat.create_stream(
      this._prepareRequest(messages, options),
      { signal: options.signal }
    );
    for await (const output of outputStream) {
      if (output.results) {
        for (const result of output.results) {
          yield new (0, _outputs.ChatGenerationChunk)({
            message: new (0, _messages.AIMessageChunk)({
              content: result.generated_text
            }),
            text: result.generated_text,
            generationInfo: {
              conversationId: output.conversation_id,
              inputTokens: result.input_tokens,
              generatedTokens: result.generated_tokens,
              seed: result.seed,
              stopReason: result.stop_reason,
              stopSequence: result.stop_sequence
            }
          });
          await _optionalChain([_runManager, 'optionalAccess', _11 => _11.handleText, 'call', _12 => _12(result.generated_text)]);
        }
      }
      if (output.moderations) {
        yield new (0, _outputs.ChatGenerationChunk)({
          message: new (0, _messages.AIMessageChunk)({
            content: ""
          }),
          text: "",
          generationInfo: {
            conversationId: output.conversation_id,
            moderation: output.moderations
          }
        });
        await _optionalChain([_runManager, 'optionalAccess', _13 => _13.handleText, 'call', _14 => _14("")]);
      }
    }
  }
  _prepareRequest(messages, options) {
    const {
      conversation_id,
      model_id,
      prompt_id,
      use_conversation_parameters,
      parameters,
      ...rest
    } = (0, import_merge2.default)(
      {
        conversation_id: this.conversationId,
        model_id: this.modelId,
        prompt_id: this.promptId,
        moderations: this.moderations,
        parameters: this.parameters,
        use_conversation_parameters: this.useConversationParameters,
        parent_id: this.parentId,
        trim_method: this.trimMethod
      },
      {
        conversation_id: options.conversation_id,
        model_id: options.model_id,
        prompt_id: options.prompt_id,
        moderations: options.moderations,
        parameters: options.parameters,
        use_conversation_parameters: options.use_conversation_parameters,
        parent_id: options.parent_id,
        trim_method: options.trim_method
      },
      { messages: this._convertMessages(messages) }
    );
    return {
      ...conversation_id ? { conversation_id } : prompt_id ? { prompt_id } : { model_id },
      ...use_conversation_parameters ? { use_conversation_parameters } : { parameters },
      ...rest
    };
  }
  _convertMessages(messages) {
    return messages.map((message) => {
      const content = message.content;
      if (typeof content !== "string")
        throw new (0, _chunkUJJSTYW5cjs.InvalidInputError)("Multimodal messages are not supported.");
      const type = message._getType();
      switch (type) {
        case "system":
          return { content, role: "system" };
        case "human":
          return { content, role: "user" };
        case "ai":
          return { content, role: "assistant" };
        default:
          throw new (0, _chunkUJJSTYW5cjs.InvalidInputError)(`Unsupported message type "${type}"`);
      }
    });
  }
  __init4() {this.lc_serializable = true}
  __init5() {this.lc_namespace = ["@ibm-generative-ai/node-sdk", "langchain", "llm-chat"]}
  get lc_id() {
    return [...this.lc_namespace, "GenAIChatModel"];
  }
  __init6() {this.lc_kwargs = {
    modelId: void 0,
    promptId: void 0,
    conversationId: void 0,
    parameters: void 0,
    moderations: void 0,
    useConversationParameters: void 0,
    parentId: void 0,
    trimMethod: void 0,
    client: void 0
  }}
  get lc_secrets() {
    return { ...super.lc_secrets, client: "client" };
  }
  static async fromJSON(value, client) {
    const input = typeof value !== "string" ? JSON.stringify(value) : value;
    return await _load.load.call(void 0, input, {
      optionalImportsMap: {
        "@ibm-generative-ai/node-sdk/langchain/llm-chat": {
          GenAIModel: _GenAIChatModel
        }
      },
      secretsMap: {
        client
      }
    });
  }
  _modelType() {
    return this.modelId;
  }
  _llmType() {
    return "GenAIChatModel";
  }
}, _class2);

// src/langchain/prompt-template.ts
_chunkUJJSTYW5cjs.init_cjs_shims.call(void 0, );
var _prompts = require('@langchain/core/prompts');
var GenAIPromptTemplate = class _GenAIPromptTemplate {
  static toLangChain(body) {
    const fString = body.replace(
      _GenAIPromptTemplate.getTemplateMatcher("mustache"),
      "{$1}"
    );
    return _prompts.PromptTemplate.fromTemplate(fString, {
      templateFormat: "f-string",
      validateTemplate: true
    });
  }
  static fromLangChain(template) {
    if (typeof template.template !== "string")
      throw new Error("Unsupported template type");
    return template.template.replace(
      _GenAIPromptTemplate.getTemplateMatcher(template.templateFormat),
      "{{$1}}"
    );
  }
  static getTemplateMatcher(name) {
    switch (name) {
      case "mustache":
        return /\{\{([^}]+)\}\}/g;
      case "jinja2":
        return /\{\{\s*(.*?)\s*\}\}/g;
      case "fstring":
      case "f-string":
        return /\{([^}]+)\}/g;
      default: {
        throw new (0, _chunkUJJSTYW5cjs.InvalidInputError)(`Unknown template format "${name}".`);
      }
    }
  }
};




exports.GenAIChatModel = GenAIChatModel; exports.GenAIModel = GenAIModel; exports.GenAIPromptTemplate = GenAIPromptTemplate;
